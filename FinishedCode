import java.util.Scanner;

public class BankRobberyGame {
     public static final String RED = "\u001B[31m";
     public static final String RESET = "\u001B[0m";
     public static final String PINK = "\u001B[95m";
     public static final String LIGHT_GREEN = "\u001B[92m";
     public static final String LIGHT_BLUE = "\u001B[94m";
     public static final String YELLOW = "\u001B[33m";
    
 public static void main(String[] args) {
        if (args.length != 0 && args[0].equals("-help")) {
            displayHelp();
        } else {
            gamePlay();
        }
    }

    public static void displayHelp() {
        System.out.println("Erm, you really need help???");
    }

    public static void gamePlay() {
        Scanner input = new Scanner(System.in);
        
        printWelcomeMessage();
        int breakInChoice = chooseBreakInMethod(input);

        if (breakInChoice == 1) {
            handleSneakily(input);
        } else {
            handleLoudly();
        }

        input.close();
    }

    // Method to print welcome message
    public static void printWelcomeMessage() {
        System.out.println(" ");
        slowType(pink("Welcome to the Bank Robbery Simulator!"),50);
        System.out.println(" ");
        slowType(pink("You are about to rob the city's most secure bank."), 50);
        System.out.println(" ");
        //we used this link for our ASCII art (Output Width In Characters:30)
        //https://convertcase.net/ascii-art-generator/
        System.out.println(" ");
        slowType(pink("         .::.::            "),5);
        slowType(pink("       .:::...::..         "),5);
        slowType(pink("     ::--+:.+--:.:.:       "),5);
        slowType(pink("   ::-..:==+**-=...:::     "),5);
        slowType(pink(" :::.................::."),5);
        slowType(pink(" .:..................... "),5);
        slowType(pink("  :---==---===--===--:.  "),5);
        slowType(pink("  .:-=#*--:*#*::+##:::.  "),5);
        slowType(pink("   .:+#*-:=**+.-+**+::   "),5);
        slowType(pink("   .-#*+=:+*+=.-+++*::   "),5);
        slowType(pink("   .-#*+-:+*+=.-++++::   "),5);
        slowType(pink("   .-#*+-:+*+=.-++++::   "),5);
        slowType(pink("   .-#*+-:+*+=.-++++::   "),5);
        slowType(pink("   .-#*+-:+*+=.-++++::   "),5);
        slowType(pink("   .-#*+=:+*+=.-+++*::   "),5);
        slowType(pink("   .-##*-:=**+.-***.:-.  "),5);
        slowType(pink("   .:=*+-:-*++.:+++.::.  "),5);
        slowType(pink("  .....................  "),5);
        slowType(pink(" ....................... "),5);
        slowType(pink("     ...............     "),5);
        System.out.println(" ");
        slowType(pink("****************************\n"), 50);
        System.out.println(" ");
    }
    
    //method to choose break-in method
       public static int chooseBreakInMethod(Scanner input) {
           int breakInChoice;
           do {
            slowType(blue("How do you want to break into the bank?"), 50);
            System.out.println(" ");
            slowType(red("Answer using 1 or 2"), 50);
            System.out.println(" ");
            slowType(yellow("1. Sneakily"), 50); //lower risk of getting caught
            System.out.println(" ");
            slowType(yellow("2. Loudly"), 50); //higher risk of getting caught
            System.out.println(" ");
        
        //informing the user of invalid input
        if (input.hasNextInt()) {
            int choice = input.nextInt();
            if (choice >= 1 && choice <= 2) {
                breakInChoice = choice;
                break;
            } else {
                slowType(red("Invalid input! Please enter 1 or 2"), 50);
                System.out.println(" ");
            }
        } else {
            slowType(red("Invalid input! Please enter 1 or 2"), 50);
            System.out.println(" ");
            input.next(); 
        }
    } while (true);
    
    return breakInChoice;
}


    //method to handle sneakily breaking in
    public static void handleSneakily(Scanner input) {
        slowType(blue("You choose to break in sneakily."),50);
        System.out.println(" ");
        slowType(blue("You carefully plan your approach, avoiding detection by security"),50);
        
        //user inputs for these other methods if user chooses to be sneaky
        handleSecurityCameras(input);
        handleDiamond(input);
        handleBigDoor(input);
        handleInsideVault(input);
        handleEscaping(input);
    }

    //method to handle loudly breaking in
    public static void handleLoudly() {
        slowType(blue("You choose to break in loudly"),50);
        slowType(blue("You cause a commotion, alerting security"),50);
        System.out.println(" ");
        slowType(blue("You get caught by the police and go to jail...what a loser"),50);
        slowType(red("You lost!"),50);
        //https://www.patorjk.com 
        slowType(red("  _____                         ____                 "), 5);
        slowType(red(" / ____|                       / __ \\                "), 5);
        slowType(red("| |  __  __ _ _ __ ___   ___  | |  | |_   _____ _ __ "), 5);
        slowType(red("| | |_ |/ _` | '_ ` _ \\ / _ \\ | |  | \\ \\ / / _ \\ '__|"), 5);
        slowType(red("| |__| | (_| | | | | | |  __/ | |__| |\\ V /  __/ |   "), 5);
        slowType(red(" \\_____|\\__,_|_| |_| |_|\\___|  \\____/  \\_/ \\___|_|   "), 5);
    }

    //method to handle security cameras scenario
public static void handleSecurityCameras(Scanner input) {
    int cameraChoice;
    do {
        System.out.println(" ");
        slowType(blue("You are now inside the bank. What do you want to do about the security cameras?"), 50);
        System.out.println(" ");
        slowType(red("Answer using 1, 2, or 3"), 50);
        System.out.println(" ");
        slowType(yellow("1. Disable the security cameras"), 50);
        System.out.println(" ");
        slowType(yellow("2. Spray paint the cameras"), 50);
        System.out.println(" ");
        slowType(yellow("3. Leave the cameras alone"), 50);
        System.out.println(" ");
        
        if (input.hasNextInt()) {
            int choice = input.nextInt();
            if (choice >= 1 && choice <= 3) {
                cameraChoice = choice;
                break;
            } else {
                slowType(red("Invalid input! Please enter 1, 2, or 3"), 50);
                System.out.println(" ");
            }
        } else {
            slowType(red("Invalid input! Please enter 1, 2, or 3"), 50);
            System.out.println(" ");
            input.next(); // Consume the invalid input
        }
    } while (true);
    
    System.out.println(" ");

    if (cameraChoice == 1) {
        slowType(blue("You successfully disable the security cameras"), 50);
        slowType(blue("The security guard gets distracted trying to fix the cameras"), 50);
        System.out.println(" ");
    } else if (cameraChoice == 2) {
        slowType(blue("You spray paint the security cameras to obscure their vision"), 50);
        slowType(blue("It's a risky move, but it might buy you some time"), 50);
        System.out.println(" ");

        double chanceOfBeingSeen = Math.random(); 
        if (chanceOfBeingSeen < 0.5) { //50% chance of being seen
            slowType(blue("Uh oh! A security guard saw what you did! Hurry!"), 50);
            slowType(blue("You need to act fast!"), 50);   
        }
    } else {
        slowType(red("NOOO! They saw you coming!"), 50);
        //https://www.patorjk.com
        slowType(red("  _____                         ____                 "), 5);
        slowType(red(" / ____|                       / __ \\                "), 5);
        slowType(red("| |  __  __ _ _ __ ___   ___  | |  | |_   _____ _ __ "), 5);
        slowType(red("| | |_ |/ _` | '_ ` _ \\ / _ \\ | |  | \\ \\ / / _ \\ '__|"), 5);
        slowType(red("| |__| | (_| | | | | | |  __/ | |__| |\\ V /  __/ |   "), 5);
        slowType(red(" \\_____|\\__,_|_| |_| |_|\\___|  \\____/  \\_/ \\___|_|   "), 5);
        System.exit(0);
    }
}

//method to handle diamond scenario
public static void handleDiamond(Scanner input) {
    int diamondChoice;
    do {
        slowType(blue("You spot a cool looking diamond on display"), 50);
        System.out.println(" ");
        //https://convertcase.net/ascii-art-generator/
        slowType(pink("    .          "), 5);
        slowType(pink("   :-.=+:--=   "), 5);
        slowType(pink(" :..==:: -:..: "), 5);
        slowType(pink(":::-::.-.::..=+"), 5);
        slowType(pink(" =-==-.-=-:.-= "), 5);
        slowType(pink("  -:-:. =-.::  "), 5);
        slowType(pink("   :::. -:.:   "), 5);
        slowType(pink("    .:. :..    "), 5);
        slowType(pink("     .. ..     "), 5);
        System.out.println(" ");
        slowType(blue("What do you want to do?"), 50);
        System.out.println(" ");
        slowType(red("Answer using 1 or 2"), 50);
        System.out.println(" ");
        slowType(yellow("1. Steal it"), 50);
        System.out.println(" ");
        slowType(yellow("2. Leave it alone"), 50);
        System.out.println(" ");
        
        if (input.hasNextInt()) {
            int choice = input.nextInt();
            if (choice >= 1 && choice <= 2) {
                diamondChoice = choice;
                break;
            } else {
                slowType(red("Invalid input! Please enter 1 or 2"), 50);
                System.out.println(" ");
            }
        } else {
            slowType(red("Invalid input! Please enter 1 or 2"), 50);
            System.out.println(" ");
            input.next(); 
        }
    } while (true);
    
    input.nextLine(); 

    if (diamondChoice == 1) {
        slowType(blue("You decide to steal the diamond..."), 50);
        System.out.println(" ");
        if (decidesToStealDiamond(input)) {
            slowType(blue("You successfully steal the diamond!"), 50);
            System.out.println(" ");
            slowType(blue("As you grab it, an alarm goes off!"), 50);
            System.out.println(" ");
            slowType(blue("You need to move quickly!"), 50);
            System.out.println(" ");
        }
    } else {
        slowType(blue("You choose to leave the diamond alone and focus on the main objective"), 50);
        System.out.println(" ");
    }
}
    //mini game to steal diamond
    public static boolean decidesToStealDiamond(Scanner input) {
    slowType(blue("To steal the diamond you have to play a number guessing game"),50);
    slowType(blue("Good luck I guess!"),50);
    int secretNumber = (int) (Math.random() * 10) + 1; //random number between 1 and 10
    slowType(blue("Guess the secret number between 1 and 10:"), 50);
    System.out.println(" ");
    int guess;
    do {
        while (!input.hasNextInt()) {
            slowType(red("Please enter a number between 1 and 10"), 50);
            input.next();
        }
        guess = input.nextInt();
        input.nextLine();
        if (guess < 1 || guess > 10) {
            slowType(red("Please enter a number between 1 and 10"), 50);
            System.out.println(" ");
        }
    } while (guess < 1 || guess > 10);
    
    if (guess == secretNumber) {
        slowType(green("Congratulations! You guessed the secret number!"), 50);
        return true;
    } else {
        slowType(red("Sorry, the secret number was " + secretNumber + ". You failed to steal the diamond!"), 50);
        System.out.println(" ");
        return false;
    }
}

//method to handle big door scenario
public static void handleBigDoor(Scanner input) {
    slowType(blue("You reach a big door leading to the vault"),50);
    System.out.println(" ");
    slowType(blue("How do you want to proceed?"),50);
    System.out.println(" ");
    slowType(red("Answer using 1 or 2"),50);
    System.out.println(" ");
    slowType(yellow("1. Blow up the door with an explosive"),50);
    System.out.println(" ");
    slowType(yellow("2. Make a hole in the door to go in"),50);
    System.out.println(" ");
    int doorChoice;
    do {
        while (!input.hasNextInt()) {
            slowType(red("Please enter 1 or 2"),50);
            input.next();
        }
        doorChoice = input.nextInt();
        if (doorChoice < 1 || doorChoice > 2) {
            slowType(red("Invalid input! Please enter 1 or 2"),50);
            System.out.println(" ");
        }
    } while (doorChoice < 1 || doorChoice > 2);
    input.nextLine();

    if (doorChoice == 1) {
        slowType(red("Another alarm goes off! You need to hurry!"),50);
        System.out.println(" ");
    } else {
        slowType(blue("You decide to make a hole in the door to go in..."),50);
        System.out.println(" ");
        slowType(blue("You manage to bypass the alarm and enter the vault"),50);
        System.out.println(" ");
    }
}

//method to handle inside vault scenario
public static void handleInsideVault(Scanner input) {
    slowType(blue("You are now inside the vault"),50);
    System.out.println(" ");
    slowType(red("Answer using 1 or 2"),50);
    System.out.println(" ");
    slowType(yellow("1. Break everything inside the vault"),50);
    System.out.println(" ");
    slowType(yellow("2. Steal"),50);
    System.out.println(" ");
    int insideVaultChoice;
    do {
        while (!input.hasNextInt()) {
            slowType(red("Please enter 1 or 2"),50);
            input.next();
        }
        insideVaultChoice = input.nextInt();
        if (insideVaultChoice < 1 || insideVaultChoice > 2) {
            slowType(red("Invalid input! Please enter 1 or 2"),50);
            System.out.println(" ");
        }
    } while (insideVaultChoice < 1 || insideVaultChoice > 2);
    input.nextLine(); 

    if (insideVaultChoice == 1) {
        slowType(blue("What was the point of going in then... whatever!"),50);
        System.out.println(" ");
        slowType(blue("You need to hurry or you'll get caught!"),50);
        System.out.println(" ");
    } else {
        slowType(blue("You decide to steal..."), 50);
        System.out.println(" ");
        if (decidesToSteal(input)) {
            slowType(blue("Yaasss! you unscrambled the word and stole the goodies!"), 50);
            System.out.println(" ");
            slowType(blue("You manage to bypass the alarm and leave the vault"), 50);
            System.out.println(" ");
        } else {
            slowType(blue("If you don't know how to write you aren't a good robber..."), 50);
            System.out.println(" ");
            slowType(red("You're quickly apprehended and sent to jail. Game over!"), 50);
        }
    }
}

//part of the code were we asked for help
//Jasmine suggested having two methods (boolean and string)
//so the coding could be more easier, understandable and also work
    
//word scramble mini-game if user wants to steal
    public static boolean decidesToSteal(Scanner input) {
        slowType(blue("So you want to steal..."), 50);
        slowType(blue("To do so, you have to unscramble the letters I give you and make a word"), 50);
        slowType(blue("I hope you know how to write..."), 50);
        System.out.println(" ");
        String[] words = {"diamond", "money", "bank", "robber", "heist"};
        int randomIndex = (int) (Math.random() * words.length);
        String scrambledWord = scrambleWord(words[randomIndex]);

        slowType(blue("Scrambled word: " + scrambledWord),50);
        slowType(blue("Your guess: "),50);
        String wordGuess = input.nextLine().toLowerCase();

        return wordGuess.equals(words[randomIndex]);
    }

//we used the character i cause we thought it'd be easier for us to code
//scrambled word
public static String scrambleWord(String word) {
        char[] chars = word.toCharArray();
        for (int i = 0; i < chars.length; i++) {
            int randomIndex = (int) (Math.random() * chars.length);
            char temp = chars[i];
            chars[i] = chars[randomIndex];
            chars[randomIndex] = temp;
        }
        return new String(chars);
    }

//method to handle escaping scenario
public static void handleEscaping(Scanner input) {
    slowType(blue("You gotta go"),50);
    System.out.println(" ");
    slowType(red("Answer using 1 or 2"),50);
    System.out.println(" ");
    slowType(yellow("1. Blow the bank up"),50);
    System.out.println(" ");
    slowType(yellow("2. Run away as fast as you can"),50);
    System.out.println(" ");

    int runningAwayChoice;
    do {
        while (!input.hasNextInt()) {
            slowType(red("Please enter 1 or 2"),50);
            input.next();
        }
        runningAwayChoice = input.nextInt();
        if (runningAwayChoice < 1 || runningAwayChoice > 2) {
            slowType(red("Invalid input! Please enter 1 or 2"),50);
            System.out.println(" ");
        }
    } while (runningAwayChoice < 1 || runningAwayChoice > 2);
    input.nextLine(); 

    if (runningAwayChoice == 1) {
        slowType(blue("You blow up the bank, but the explosion attracts police attention."),50);
        System.out.println(" ");
        slowType(red("You're quickly apprehended and sent to jail!"),50);
        //https://www.patorjk.com
        slowType(red("  _____                         ____                 "), 5);
        slowType(red(" / ____|                       / __ \\                "), 5);
        slowType(red("| |  __  __ _ _ __ ___   ___  | |  | |_   _____ _ __ "), 5);
        slowType(red("| | |_ |/ _` | '_ ` _ \\ / _ \\ | |  | \\ \\ / / _ \\ '__|"), 5);
        slowType(red("| |__| | (_| | | | | | |  __/ | |__| |\\ V /  __/ |   "), 5);
        slowType(red(" \\_____|\\__,_|_| |_| |_|\\___|  \\____/  \\_/ \\___|_|   "), 5);
    } else {
        double escapeChance = Math.random();
        if (escapeChance < 0.5) { //50% chance of successful escape
            slowType(blue("You run away as fast as you can..."),50);
            System.out.println(" ");
            slowType(blue("You manage to escape from the bank"),50);
            System.out.println(" ");
            slowType(green("Congratulations! You successfully robbed the bank and got away with it!"),50);
            //https://www.patorjk.com
             slowType(green("  __   __   __   __"), 5);
            slowType(green("  \\ \\ / /   \\ \\ / /"), 5);
            slowType(green("   \\ V /__ _|\\ V / "), 5);
            slowType(green("    \\ // _` | \\ /"), 5);
            slowType(green("    | | (_| | | |  "), 5);
            slowType(green("    \\_/\\__,_| \\_/"), 5);
        } else {
            slowType(blue("You run away as fast as you can..."),50);
            System.out.println(" ");
            slowType(blue("Oh no! The police catch up with you!"),50);
            System.out.println(" ");
            slowType(red("You're quickly apprehended and sent to jail!"),50);
            //https://www.patorjk.com
            slowType(red("  _____                         ____                 "), 5);
            slowType(red(" / ____|                       / __ \\                "), 5);
            slowType(red("| |  __  __ _ _ __ ___   ___  | |  | |_   _____ _ __ "), 5);
            slowType(red("| | |_ |/ _` | '_ ` _ \\ / _ \\ | |  | \\ \\ / / _ \\ '__|"), 5);
            slowType(red("| |__| | (_| | | | | | |  __/ | |__| |\\ V /  __/ |   "), 5);
            slowType(red(" \\_____|\\__,_|_| |_| |_|\\___|  \\____/  \\_/ \\___|_|   "), 5);
        }
    }
}

    //making the text print out slowly to make it like an actual text based game
    public static void slowType(String s, long delay) {
    for (int i = 0; i < s.length(); i++) {
        System.out.print(s.charAt(i));
        try {
            Thread.sleep(delay); //adds delay between characters
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
    }
    System.out.println(); //adds a newline after printing the whole string
}

    //adding color to our code
    public static String red(String s){
        return RED + s + RESET;
    }
    
    public static String pink(String s){
        return PINK + s + RESET;
    }
    
    public static String green(String s){
        return LIGHT_GREEN + s + RESET;
    }
    
    public static String blue(String s){
        return LIGHT_BLUE + s + RESET;
    }
    
    public static String yellow(String s){
        return YELLOW + s + RESET;
    }
}
